# 📘 Estudos em Golang — Aprendizado Estruturado com Foco em Mercado

> Este repositório contém meus estudos organizados em Golang, com acompanhamento personalizado de um engenheiro de software sênior. O objetivo é dominar o desenvolvimento back-end moderno com Go e me preparar para oportunidades reais no mercado de tecnologia.

---

## ✅ Conteúdo já Estudado

### ⚙️ 1. Configuração do Ambiente
- [x] Instalação do Go via Homebrew (macOS)
- [x] Configuração do `GOPATH` e `PATH` no `.zshrc`
- [x] Criação de projeto com `go mod init`
- [x] Uso do VS Code com extensão oficial do Go

---

### 🧠 2. Fundamentos da Linguagem
- [x] `package main`, `import`, `func main()`
- [x] `fmt.Println`, `fmt.Scanln`, `fmt.Scanf`
- [x] Declaração de variáveis (`var`, `:=`)
- [x] Tipos primitivos: `int`, `float64`, `string`, `bool`
- [x] Operadores lógicos: `&&`, `||`, `!`
- [x] Entrada do usuário e conversões

---

### 🔁 3. Estruturas de Controle
- [x] Condicionais: `if`, `else`, `switch`
- [x] Laços: `for`, `for range`, `for { ... break }`

---

### 📦 4. Funções
- [x] Funções simples e com retorno
- [x] Parâmetros nomeados
- [x] Múltiplos retornos
- [x] Funções com lógica matemática

---

### 🧱 5. Estruturas de Dados
- [x] Arrays: tamanho fixo
- [x] Slices: tamanho dinâmico, uso de `append`
- [x] Maps: estrutura `chave → valor`, uso de `make`

---

### 🔄 6. Iteração com `range`
- [x] Uso de `k` (índice/chave) e `v` (valor)
- [x] Iteração em slices e maps
- [x] Ignorar valores com `_`

---

### 👤 7. Structs e Métodos
- [x] Criação de `structs` personalizados
- [x] Inicialização direta e nomeada
- [x] Métodos associados a structs
- [x] Métodos com ponteiros (`*Struct`)

---

## 📘 Roadmap Futuro

### 🔨 8. Programação Orientada a Objetos com Structs
- [ ] Composição de structs
- [ ] Encapsulamento e reuso de código

### 🔌 9. Criação de APIs com Go (Framework Gin)
- [ ] Instalação do Gin
- [ ] Criação de rotas
- [ ] Tratamento de requisições e respostas JSON

### 🗃️ 10. Trabalhando com Banco de Dados
- [ ] Conexão com PostgreSQL
- [ ] ORM com GORM
- [ ] Migrations, Inserts, Queries e Updates

### 📁 11. Manipulação de Arquivos
- [ ] Leitura e escrita em arquivos `.txt` e `.json`
- [ ] Serialização com `encoding/json`

### 🧪 12. Testes e Boas Práticas
- [ ] Testes unitários com `testing`
- [ ] Subtests, mocks e assertions
- [ ] Linters e formatação (`gofmt`, `golint`)

### 🚀 13. Deploy e Produtização
- [ ] Estrutura de projeto limpa
- [ ] Build com `go build`
- [ ] Deploy local, em VPS ou em container (Docker)

---

## 📌 Meta
📅 *Estudo contínuo com foco no domínio da linguagem e no desenvolvimento de projetos práticos aplicáveis ao mercado real.*

---

### ✨ Autor
**Uederson Ferreira** — [LinkedIn](https://www.linkedin.com/in/uederson-ferreira) | [GitHub](https://github.com/uederson-ferreira)
